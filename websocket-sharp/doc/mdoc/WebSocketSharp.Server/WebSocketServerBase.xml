<Type Name="WebSocketServerBase" FullName="WebSocketSharp.Server.WebSocketServerBase">
  <TypeSignature Language="C#" Value="public abstract class WebSocketServerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebSocketServerBase extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>websocket-sharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides the basic functions of the server that receives the WebSocket connection requests.
            </summary>
    <remarks>
            The WebSocketServerBase class is an abstract class.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSocketServerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSocketServerBase (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
            A <see cref="T:System.String" /> that contains a WebSocket URL.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class that listens for incoming connection attempts
            on the specified WebSocket URL.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> is <see langword="null" />.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="url" /> is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSocketServerBase (System.Net.IPAddress address, int port, string absPath, bool secure);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress address, int32 port, string absPath, bool secure) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="absPath" Type="System.String" />
        <Parameter Name="secure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </param>
        <param name="port">
            An <see cref="T:System.Int32" /> that contains a port number.
            </param>
        <param name="absPath">
            A <see cref="T:System.String" /> that contains an absolute path.
            </param>
        <param name="secure">
            A <see cref="T:System.Boolean" /> that indicates providing a secure connection or not. (<c>true</c> indicates providing a secure connection.)
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.Server.WebSocketServerBase" /> class that listens for incoming connection attempts
            on the specified <paramref name="address" />, <paramref name="port" />, <paramref name="absPath" /> and <paramref name="secure" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Either <paramref name="address" /> or <paramref name="absPath" /> is <see langword="null" />.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="absPath" /> is invalid.
            </para>
          <para>
            -or-
            </para>
          <para>
            Pair of <paramref name="port" /> and <paramref name="secure" /> is invalid.
            </para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocket">
      <MemberSignature Language="C#" Value="protected abstract void AcceptWebSocket (WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AcceptWebSocket(class WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext context) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext" />
      </Parameters>
      <Docs>
        <param name="context">
            A <see cref="T:WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext" /> that contains the WebSocket connection request objects.
            </param>
        <summary>
            Accepts a WebSocket connection request.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the local IP address on which to listen for incoming connection attempts.
            </summary>
        <value>
            A <see cref="T:System.Net.IPAddress" /> that contains a local IP address.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the WebSocket URL on which to listen for incoming connection attempts.
            </summary>
        <value>
            A <see cref="T:System.Uri" /> that contains a WebSocket URL.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="protected virtual void Error (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Error(string message) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
            A <see cref="T:System.String" /> that contains an error message.
            </param>
        <summary>
            Occurs the <see cref="E:WebSocketSharp.Server.WebSocketServerBase.OnError" /> event with the specified <see cref="T:System.String" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public bool IsSecure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecure" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the server provides secure connection.
            </summary>
        <value>
          <c>true</c> if the server provides secure connection; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelfHost">
      <MemberSignature Language="C#" Value="public bool IsSelfHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelfHost" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the server is self host.
            </summary>
        <value>
          <c>true</c> if the server is self host; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;WebSocketSharp.ErrorEventArgs&gt; OnError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class WebSocketSharp.ErrorEventArgs&gt; OnError" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;WebSocketSharp.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the server gets an error.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the port on which to listen for incoming connection attempts.
            </summary>
        <value>
            An <see cref="T:System.Int32" /> that contains a port number.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts to receive the WebSocket connection requests.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops receiving the WebSocket connection requests.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
