<Type Name="HttpListenerResponse" FullName="WebSocketSharp.Net.HttpListenerResponse">
  <TypeSignature Language="C#" Value="public sealed class HttpListenerResponse : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerResponse extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>websocket-sharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides access to a response to a request being processed by a <see cref="T:WebSocketSharp.Net.HttpListener" /> instance.
            </summary>
    <remarks>
            The HttpListenerResponse class cannot be inherited.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Closes the connection to the client without sending a response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            A <see cref="T:System.String" /> that contains the name of the HTTP header to add.
            </param>
        <param name="value">
            A <see cref="T:System.String" /> that contains the value of the HTTP header to add.
            </param>
        <summary>
            Adds the specified HTTP header <paramref name="name" /> and <paramref name="value" /> to
            the headers for this response.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65,535 characters.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (WebSocketSharp.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class WebSocketSharp.Net.Cookie cookie) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="WebSocketSharp.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> to add to the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" />.
            </param>
        <summary>
            Adds the specified <see cref="T:WebSocketSharp.Net.Cookie" /> to the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> sent with the response.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cookie" /> is <see langword="null" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            A <see cref="T:System.String" /> that contains the name of the HTTP header to append <paramref name="value" /> to.
            </param>
        <param name="value">
            A <see cref="T:System.String" /> that contains the value to append to the HTTP header.
            </param>
        <summary>
            Appends a <paramref name="value" /> to the specified HTTP header sent with the response.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The length of <paramref name="value" /> is greater than 65,535 characters.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sends the response to the client and releases the resources associated with
            the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (byte[] responseEntity, bool willBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(unsigned int8[] responseEntity, bool willBlock) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseEntity" Type="System.Byte[]" />
        <Parameter Name="willBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="responseEntity">
            An array of <see cref="T:System.Byte" /> that contains the response entity body data.
            </param>
        <param name="willBlock">
          <c>true</c> if this method blocks execution while flushing the stream to the client; otherwise, <c>false</c>.
            </param>
        <summary>
            Sends the response with the specified array of <see cref="T:System.Byte" /> to the client and
            releases the resources associated with the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> instance.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="responseEntity" /> is <see langword="null" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the encoding that can be used with the entity body data included in the response.
            </summary>
        <value>
            A <see cref="T:System.Text.Encoding" /> that contains the encoding that can be used with the entity body data.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size of the entity body data included in the response.
            </summary>
        <value>
            A <see cref="T:System.Int64" /> that contains the value of the Content-Length entity-header field.
            The value is a number of bytes in the entity body data.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
            The value specified for a set operation is less than zero.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the media type of the entity body included in the response.
            </summary>
        <value>
            The type of the content.
            A <see cref="T:System.String" /> that contains the value of the Content-Type entity-header field.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The value specified for a set operation is <see langword="null" />.
            </exception>
        <exception cref="T:System.ArgumentException">
            The value specified for a set operation is a <see cref="F:System.String.Empty" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public WebSocketSharp.Net.CookieCollection Cookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class WebSocketSharp.Net.CookieCollection Cookies" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>WebSocketSharp.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the cookies returned with the response.
            </summary>
        <value>
            A <see cref="T:WebSocketSharp.Net.CookieCollection" /> that contains the cookies returned with the response.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (WebSocketSharp.Net.HttpListenerResponse templateResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFrom(class WebSocketSharp.Net.HttpListenerResponse templateResponse) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateResponse" Type="WebSocketSharp.Net.HttpListenerResponse" />
      </Parameters>
      <Docs>
        <param name="templateResponse">
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> to copy.
            </param>
        <summary>
            Copies properties from the specified <see cref="T:WebSocketSharp.Net.HttpListenerResponse" /> to this response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public WebSocketSharp.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class WebSocketSharp.Net.WebHeaderCollection Headers" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>WebSocketSharp.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HTTP headers returned to the client.
            </summary>
        <value>
            A <see cref="T:WebSocketSharp.Net.WebHeaderCollection" /> that contains the HTTP headers returned to the client.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the server requests a persistent connection.
            </summary>
        <value>
          <c>true</c> if the server requests a persistent connection; otherwise, <c>false</c>.
            The default is <c>true</c>.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:System.IO.Stream" /> to use to write the entity body data.
            </summary>
        <value>
            A <see cref="T:System.IO.Stream" /> to use to write the entity body data.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HTTP version used in the response.
            </summary>
        <value>
            A <see cref="T:System.Version" /> that contains the HTTP version used in the response.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The value specified for a set operation is <see langword="null" />.
            </exception>
        <exception cref="T:System.ArgumentException">
            The value specified for a set operation does not have its <see cref="P:System.Version.Major">Major</see> property set to 1 or
            does not have its <see cref="P:System.Version.Minor">Minor</see> property set to either 0 or 1.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
            A <see cref="T:System.String" /> that contains a URL to redirect the client's request to.
            </param>
        <summary>
            Configures the response to redirect the client's request to the specified <paramref name="url" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URL to which the client is redirected to locate a requested resource.
            </summary>
        <value>
            A <see cref="T:System.String" /> that contains the value of the Location response-header field.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        <exception cref="T:System.ArgumentException">
            The value specified for a set operation is a <see cref="F:System.String.Empty" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendChunked">
      <MemberSignature Language="C#" Value="public bool SendChunked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendChunked" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the response uses the chunked transfer encoding.
            </summary>
        <value>
          <c>true</c> if the response uses the chunked transfer encoding; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (WebSocketSharp.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class WebSocketSharp.Net.Cookie cookie) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="WebSocketSharp.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
            A <see cref="T:WebSocketSharp.Net.Cookie" /> to set.
            </param>
        <summary>
            Adds or updates a <see cref="T:WebSocketSharp.Net.Cookie" /> in the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> sent with the response.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cookie" /> is <see langword="null" />.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cookie" /> already exists in the <see cref="P:WebSocketSharp.Net.HttpListenerResponse.Cookies" /> and
            could not be replaced.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the HTTP status code returned to the client.
            </summary>
        <value>
            An <see cref="T:System.Int32" /> that indicates the HTTP status code for the response to the request.
            The default is <see cref="F:WebSocketSharp.Net.HttpStatusCode.OK" />.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            This object is closed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The response has been sent already.
            </exception>
        <exception cref="T:System.Net.ProtocolViolationException">
            The value specified for a set operation is invalid. Valid values are between 100 and 999.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a description of the HTTP status code returned to the client.
            </summary>
        <value>
            A <see cref="T:System.String" /> that contains a description of the HTTP status code returned to the client.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resource used by the <see cref="T:WebSocketSharp.Net.HttpListenerResponse" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
